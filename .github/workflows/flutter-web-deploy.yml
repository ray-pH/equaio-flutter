name: Flutter Web Deploy with Rust

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
        env:
          RUSTUP_TOOLCHAIN: nightly

      - name: Add rust-src component
        run: rustup +nightly component add rust-src

      - name: Add wasm32-unknown-unknown target
        run: rustup +nightly target add wasm32-unknown-unknown

      - name: Install wasm-pack
        run: cargo install wasm-pack

      - name: Install flutter_rust_bridge_codegen
        run: cargo install flutter_rust_bridge_codegen

      - name: Create required directory
        run: mkdir -p lib/src/rust

      - name: Run flutter_rust_bridge_codegen generate
        env:
          FRB_DART_RUN_COMMAND_STDERR: "1"
        run: flutter_rust_bridge_codegen generate

      - name: Run flutter_rust_bridge_codegen build-web 
        env:
          FRB_DART_RUN_COMMAND_STDERR: "1"
        run: flutter_rust_bridge_codegen build-web

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Build Flutter web
        run: flutter build web --release

      - name: Add CORS Headers for Netlify
        run: |
          echo "/*" > build/web/_headers
          echo "  Cross-Origin-Opener-Policy: same-origin" >> build/web/_headers
          echo "  Cross-Origin-Embedder-Policy: require-corp" >> build/web/_headers

      - name: Upload Web Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: build/web

  deploy:
      needs: build
      runs-on: ubuntu-latest

      permissions:
        contents: write 

      steps:
        - name: Download Web Build Artifact
          uses: actions/download-artifact@v3
          with:
            name: web-build
            path: build/web

        - name: Deploy to GitHub Pages
          uses: peaceiris/actions-gh-pages@v3
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: build/web
